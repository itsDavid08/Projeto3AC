C51 COMPILER V9.60.7.0   PROJETO_FASE3                                                     05/23/2024 15:39:09 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PROJETO_FASE3
OBJECT MODULE PLACED IN .\Objects\Projeto_fase3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Projeto_fase3.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\Projeto_fase3.lst) TABS(2) OBJECT(.\Objects\Projeto_fase3.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          //tempos dos timers 0 e 1
   4          
   5          //Timer - 10ms -> (65536 (10000h) - 10000 (2710h)) = 55536 (D8F0h)
   6          #define TempoH 0xD8
   7          #define TempoL 0xF0
   8          //
   9          
  10          
  11          
  12          
  13          //atribuição dos pinos
  14          //display D1
  15          sbit D1A = P1^0;
  16          sbit D1B = P1^1;
  17          sbit D1C = P1^2;
  18          sbit D1D = P1^3;
  19          sbit D1E = P1^4;
  20          sbit D1F = P1^5;
  21          sbit D1G = P1^6;
  22          sbit D1DP = P1^7;
  23          
  24          //display D2
  25          sbit D2A = P2^0;
  26          sbit D2B = P2^1;
  27          sbit D2C = P2^2;
  28          sbit D2D = P2^3;
  29          sbit D2E = P2^4;
  30          sbit D2F = P2^5;
  31          sbit D2G = P2^6;
  32          sbit D2DP = P2^7;
  33          
  34          //Botões de entrada
  35          sbit bA = P3^4;
  36          sbit bB = P3^5;
  37          sbit bC = P3^6;
  38          sbit bD = P3^7;
  39          sbit bAnd = P3^3;
  40          
  41          
  42          
  43          unsigned char Segundos = 5; //guarda os segundos a mostrar no D1
  44          unsigned char DecimasSegundos = 0; //guarda as decimas de segundos mostrados no D2
  45          unsigned int conta = 0;
  46          
  47          unsigned char Start = 1; //variavel que indica se dá-se início à contagem decrescente
  48          
  49          unsigned char resposta = 0; // interpreta a qual foi o botão presionado pelo utilizador 
  50          
  51          unsigned char GuardaSegundos = 0; //guarda uma copia dos segundos 
  52          unsigned char GuardaDecimasSegundos = 0; //guarda uma copia das decimas dos segundos
  53          
  54          
C51 COMPILER V9.60.7.0   PROJETO_FASE3                                                     05/23/2024 15:39:09 PAGE 2   

  55          
  56          void Init(void); 
  57          void mostraDisplay (unsigned char S, unsigned char D); 
  58          
  59          void main(void)
  60          {
  61   1        Init();
  62   1        
  63   1        while(1) //ciclo infinito
  64   1        {
  65   2          bAnd = bA && bB && bC && bD; //ISTO É TEMPORAL JÁ QUE SERÁ FEITO FISICAMENTE
  66   2          mostraDisplay (Segundos, DecimasSegundos);
  67   2        }
  68   1      }
  69          
  70          void Init(void)
  71          {
  72   1        EA = 1; //ativar as interrupções
  73   1        ET0 = 1; //ativa interrupçõe do timer 0
  74   1        ET1 = 1; //ativa interrupções do timer 1
  75   1        EX0 = 1; //ativa interrupção externa 0
  76   1        EX1 = 0; //não ativa interrução externa 1
  77   1        
  78   1        
  79   1      
  80   1        IP = 0x00;//prioridades das interrupções
  81   1        
  82   1      
  83   1        //Timer0 - 10ms -> (65536 (10000h) - 10000 (2710h)) = 55536 (D8F0h)
  84   1        TH0 = TempoH;
  85   1        TL0 = TempoL;
  86   1        
  87   1        //Timer1 - 10ms -> (65536 (10000h) - 10000 (2710h)) = 55536 (D8F0h)
  88   1        TH1 = TempoH;
  89   1        TL1 = TempoL;
  90   1        
  91   1      
  92   1        TMOD &= 0xFF; //apaga o que estiver no TMOD
  93   1        TMOD |= 0x11; //Coloca os dois Timers no modo 1 (16 bits)
  94   1      
  95   1        TR0 = 0; //timer 0 desligado
  96   1        TR1 = 0; //timer 1 desligado
  97   1        
  98   1        //interrupções externas ativam quando o botão passa a ter valor lógico zero
  99   1        IT0 = 1; 
 100   1        IT1 = 1; 
 101   1      }
 102          
 103          
 104          void InterrupcaoExterna0 (void) interrupt 0  //foi presionado B1
 105          {
 106   1        
 107   1        
 108   1        if (Start == 0) //caso estiver a contar a Zero, a contagem terá acabado e é preciso reiniciar a contage
             -m
 109   1        {
 110   2          Start = 1; //contando volta a ser 1
 111   2          resposta = 0; //a resposta anterior � apagada
 112   2          Segundos = 5;
 113   2          DecimasSegundos = 0;
 114   2          //Timer0 - 10ms -> (65536 (10000h) - 10000 (2710h)) = 55536 (D8F0h)
 115   2          TH0 = TempoH;
C51 COMPILER V9.60.7.0   PROJETO_FASE3                                                     05/23/2024 15:39:09 PAGE 3   

 116   2          TL0 = TempoL;
 117   2          //Timer1 - 10ms -> (65536 (10000h) - 10000 (2710h)) = 55536 (D8F0h)
 118   2          TH1 = TempoH;
 119   2          TL1 = TempoL;
 120   2          TR0 = 1; //timer 0 come�a desligado
 121   2          TR1 = 0; //timer 1 come�a desligado
 122   2          EX0 = 0; //ativa interrup��o 0
 123   2          conta = 0;
 124   2        }
 125   1        else{  //caso contrario, inicia a contagem
 126   2          TR0 = 1; //timer 0 come�a a contar o tempo
 127   2          TR1 = 1; //timer 1 come�a a contar o tempo
 128   2          EX0 = 0; //desativa interrup��o externa 0
 129   2          EX1 = 1; //desativa interrup��o 1
 130   2        }
 131   1      }
 132          
 133          
 134          
 135          
 136          void Interrupcao_Timer0(void) interrupt 1  //timer 0 usado para debounce de todos os botões
 137          {
 138   1        TR0 = 0; //desativa o timer0
 139   1        
 140   1        //elimina o ruido do botão ao limpar as flags das interrupções externas
 141   1        IE0 = 0; 
 142   1        IE1 = 0;
 143   1        
 144   1        //ativa as interrupções externas
 145   1        EX0 = 1; 
 146   1      
 147   1        
 148   1        
 149   1        //faz reset ao timer 0
 150   1        //Timer 0 - 10ms -> (65536 (10000h) - 10000 (2710h)) = 55536 (D8F0h)
 151   1        TH0 = TempoH; 
 152   1        TL0 = TempoL;
 153   1      }
 154          
 155          
 156          
 157          
 158          void InterrupcaoExterna2 (void) interrupt 2 //foi presionado bA ou bB ou bC ou bD
 159          {
 160   1        //TR1 = 1; //timer 1 come�a a contar o tempo
 161   1        //começa o debouce dos botões
 162   1        EX1 = 0; 
 163   1        
 164   1        if (bA==0)
 165   1        {
 166   2          resposta= 'a'; 
 167   2        }
 168   1        
 169   1        if (bB==0)
 170   1        {
 171   2          resposta= 'b';
 172   2        }
 173   1        
 174   1        if (bC==0)
 175   1        {
 176   2          resposta= 'c';
 177   2        }
C51 COMPILER V9.60.7.0   PROJETO_FASE3                                                     05/23/2024 15:39:09 PAGE 4   

 178   1        
 179   1        if (bD==0)
 180   1        {
 181   2          resposta= 'd';
 182   2        }
 183   1        
 184   1        Start =0; //Start guarda a 0 já que para a contagem decresciva 
 185   1        GuardaSegundos = Segundos; //guarda uma copia dos segundos
 186   1        GuardaDecimasSegundos = DecimasSegundos; //guarda uma copia das decimas
 187   1      }
 188          
 189          
 190          void Interrupcao_Timer1 (void) interrupt 3
 191          {
 192   1        if (Start==1) // se esta ativa a contagem decresciva
 193   1        {
 194   2          
 195   2          if (conta >= 10){
 196   3            
 197   3            if(DecimasSegundos == 0)
 198   3            {
 199   4              if(Segundos == 0){
 200   5                EX1 = 0 ;
 201   5                GuardaSegundos = Segundos; //guarda uma copia dos segundos
 202   5                GuardaDecimasSegundos = DecimasSegundos; //guarda uma copia das decimas
 203   5                Start = 0;
 204   5                conta = 0;
 205   5                
 206   5              }
 207   4                else{
 208   5                  DecimasSegundos = 9;
 209   5                  --Segundos;
 210   5                }
 211   4            }
 212   3            else{
 213   4              --DecimasSegundos;
 214   4            }
 215   3            conta = 0;
 216   3          }
 217   2          else{ 
 218   3          conta++;
 219   3          }
 220   2      
 221   2        }
 222   1        else // caso tenha acabado a contagem decresciva 
 223   1        {
 224   2          if (conta >= 100) //por cada segundo
 225   2          {
 226   3            if (Segundos == 10) //se os segundos(display1) mostrar um traço
 227   3            {
 228   4              Segundos = GuardaSegundos; //mostra os segundos 
 229   4              DecimasSegundos = GuardaDecimasSegundos; //mostra as decimas 
 230   4            }
 231   3            else //caso contrario
 232   3            {
 233   4              Segundos = 10; //o display 1 mostra um traço
 234   4              switch (resposta) //switch que interpreta a resposta introduzida
 235   4              {
 236   5                case 'a':
 237   5                  DecimasSegundos = 11; //mostra A
 238   5                  break;
 239   5                case 'b':
C51 COMPILER V9.60.7.0   PROJETO_FASE3                                                     05/23/2024 15:39:09 PAGE 5   

 240   5                  DecimasSegundos = 12; //mostra B
 241   5                  break;
 242   5                case 'c':
 243   5                  DecimasSegundos = 13; //mostra C
 244   5                  break;
 245   5                case 'd':
 246   5                  DecimasSegundos = 14; //mostra D
 247   5                  break;
 248   5                default:
 249   5                  DecimasSegundos = 10; //mostra um traço
 250   5              }
 251   4            }
 252   3            conta = 0; //reinicia o contador
 253   3          }
 254   2          else //caso ainda não for contado nenhum segundo
 255   2          {
 256   3            ++conta;
 257   3          }
 258   2        }
 259   1        
 260   1        
 261   1        //reinicia o timer1
 262   1        //Timer1 - 10ms -> (65536 (10000h) - 10000 (2710h)) = 55536 (D8F0h)
 263   1          TH1 = TempoH; 
 264   1          TL1 = TempoL;
 265   1        
 266   1      }
 267          
 268          //Fun��o para mostrar os caracteres no display
 269          
 270          void mostraDisplay(unsigned char S, unsigned char D)
 271          {
 272   1        
 273   1        //tabela com os valores a mostrar no display
 274   1        code unsigned display [26][7] = {  //é preciso atribuir ainda o valor para DP
 275   1      
 276   1          {0, 0, 0, 0, 0, 0, 1},//0
 277   1          {1, 0, 0, 1, 1, 1, 1},//1
 278   1          {0, 0, 1, 0, 0, 1, 0},//2
 279   1          {0, 0, 0, 0, 1, 1, 0},//3
 280   1          {1, 0, 0, 1, 1, 0, 0},//4
 281   1          {0, 1, 0, 0, 1, 0, 0},//5
 282   1          {0, 1, 0, 0, 0, 0, 0},//6
 283   1          {0, 0, 0, 1, 1, 1, 1},//7
 284   1          {0, 0, 0, 0, 0, 0, 0},//8
 285   1          {0, 0, 0, 0, 1, 0, 0},//9
 286   1          {1, 1, 1, 1, 1, 1, 0},//-
 287   1          {0, 0, 0, 1, 0, 0, 0},//A
 288   1          {1, 1, 0, 0, 0, 0, 0},//B
 289   1          {0, 1, 1, 0, 0, 0, 1},//C
 290   1          {1, 0, 0, 0, 0, 1, 0},//D
 291   1        };
 292   1        
 293   1        //mostra o display com 
 294   1        D1A = display[S][0];
 295   1        D1B = display[S][1];
 296   1        D1C = display[S][2];
 297   1        D1D = display[S][3];
 298   1        D1E = display[S][4];
 299   1        D1F = display[S][5];
 300   1        D1G = display[S][6];
 301   1        D1DP = 0;               //mostra . no display
C51 COMPILER V9.60.7.0   PROJETO_FASE3                                                     05/23/2024 15:39:09 PAGE 6   

 302   1        
 303   1        D2A = display[D][0];
 304   1        D2B = display[D][1];
 305   1        D2C = display[D][2];
 306   1        D2D = display[D][3];
 307   1        D2E = display[D][4];
 308   1        D2F = display[D][5];
 309   1        D2G = display[D][6];
 310   1        D2DP = 1;               // não mostra o . no display
 311   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    725    ----
   CONSTANT SIZE    =    364    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
